@model UserStore.WebUI.Models.OrderListViewModel
@{
    ViewBag.Title = "List of orders";
}

<head>
    <style>
        #topBtn {
            display: none;
            position: fixed;
            bottom: 20px;
            right: 30px;
            z-index: 99;
            border: none;
            outline: none;
            background-color: red;
            color: white;
            cursor: pointer;
            padding: 15px;
            border-radius: 10px;
        }

        #topBtn:hover {
            background-color: #555;
        }
    </style>
    
    <script type="text/javascript">
        window.onscroll = function () { scrollFunction() };

        function scrollFunction() {
            if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
                document.getElementById("topBtn").style.display = "block";
            } else {
                document.getElementById("topBtn").style.display = "none";
            }
        }
        
        function topFunction() {
            document.body.scrollTop = 0; // For Chrome, Safari and Opera 
            document.documentElement.scrollTop = 0; // For IE and Firefox
        }
    </script>
</head>

<form method="get">
    <div class="form-inline">
        <div class="form-group">
            <label class="control-label">Manager:</label>
            @Html.DropDownList("manager", Model.Managers,
                new { @class = "form-control" })
        </div>
        
        <div class="form-group">
            <label class="control-label">Product:</label>
            @Html.DropDownList("product", Model.Products,
                new { @class = "form-control" })
        </div>
        
        <div class="form-group">
            <label>Date:</label>
            @Html.DropDownList("date", Model.Dates,
                new { @class = "form-control" })
        </div>
        
        <div class="form-group">
            <label>From value:</label>
            @Html.TextBoxFor(x => x.FromValue, new { @type = "number", @value = "0", @min = "0", @step = "0.01", @class = "form-control"})
        </div>
        
        <div class="form-group">
            <label>To value:</label>
            @Html.TextBoxFor(x => x.ToValue, new { @type = "number", @value = "0", @min = "0", @step = "0.01", @class = "form-control"})
        </div>
        
        <div>
            <input type="submit" value="Filter" class="btn btn-default" />
        </div>
    </div>
</form>

<form class="form-group">
    @Html.Partial("OrdersSummary", Model.Orders)
</form>

<button onclick="topFunction()" id="topBtn" title="Go to top">Top</button>