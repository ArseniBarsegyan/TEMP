@model PagedList.IPagedList<UserStore.BLL.DTO.UserDto>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Users";
}

<head>
    <style>
        input[type=text] {
            width: 150px;
            box-sizing: border-box;
            border: 2px solid #ccc;
            border-radius: 4px;
            background-color: white;
            background-image: url('../../Images/searchicon.png');
            background-position: 2px 2px;
            background-repeat: no-repeat;
            padding: 12px 20px 12px 40px;
            -webkit-transition: width 0.4s ease-in-out;
            transition: width 0.4s ease-in-out;
        }
        
        input[type=text]:focus {
            width: 100%;
        }
    </style>
</head>

<div class="row">
    <div class="col-md-8">
        <ul class="nav nav-pills nav-justified">
            <li role="presentation"><a href="/Manager/Index">Managers</a></li>
            <li role="presentation"><a href="/Order/Index">Orders</a></li>
            <li role="presentation"><a href="/Product/Index">Products</a></li>
        </ul>
    </div>
    <div class="col-md-4">
        @using (Ajax.BeginForm("UserSearch", new AjaxOptions
        {
            UpdateTargetId = "results",
            LoadingElementId = "loading",
            LoadingElementDuration = 500,
        }))
        {
            <div class="form-inline">
                <input type="text" placeholder="User name" name="name" class="form-control" />
            </div>
        }
    </div>
</div>

<div id="loading" style="display: none; color: red; font-weight: bold">
    <p>loading...</p>
</div>

<div id="results">
</div>

<div class="panel panel-primary">
    <div class="panel-heading">
        Users accounts
    </div>
    <table class="table table-striped">
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Role</th>
            <th></th>
            <th></th>
        </tr>
        @if (!Model.Any())
        {
            <tr>
                <td colspan="3" class="text-center">There are no users accounts</td>
            </tr>
        }
        else
        {
            foreach (var user in Model)
            {
                <tr>
                    <td>@user.Id</td>
                    <td>@user.Name</td>
                    <td>@user.Role</td>
                    <td><p><a class="btn btn-default" href="/Admin/Edit/@user.Id">Edit</a></p></td>
                    <td><p><a class="btn btn-default" href="/Admin/Delete/@user.Id">Delete</a></p></td>
                </tr>
            }
        }
    </table>
</div>

Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) from @Model.PageCount
@Html.PagedListPager(Model, page => Url.Action("Index", new { page }))